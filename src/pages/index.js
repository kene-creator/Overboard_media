import { useState, useEffect } from 'react';
import Head from 'next/head';
import Image from 'next/image';
import { Inter, Space_Grotesk } from '@next/font/google';
import { LayoutGroup, motion } from 'framer-motion';
import { useInView } from 'react-intersection-observer';
import Navbar from '@/components/Layout/Navbar';
import Header from '@/components/Layout/Header';
import Affiliates from '@/components/Layout/Affiliates';
import Achievements from '@/components/Layout/Achievements';
import HowItWorks from '@/components/Layout/HowItWorks';

const inter = Inter({ subsets: ['latin'] });
const space = Space_Grotesk({ subsets: ['latin'], weight: ['600'] });

export default function Home() {
  const [isAffiliatesInView, setIsAffiliatesInView] = useState(false);
  const [isAcheivementsInView, setIsAchivementsInView] = useState(false);
  const [isHeaderInView, setIsHeaderInView] = useState(false);
  const [isHowItWorksInView, setIsHowItWorksInView] = useState(false);

  const { ref: headerRef, inView: isHeaderView } = useInView({ threshold: 0 });
  const { ref: affiliatesRef, inView: isAffiliatesView } = useInView({
    threshold: 0,
  });
  const { ref: achievementsRef, inView: isAcheivementsView } = useInView({
    threshold: 0,
  });
  const { ref: howItWorksRef, inView: isHowItWorksView } = useInView({
    threshold: 0,
  });

  useEffect(() => {
    if (isHeaderView) {
      setIsHeaderInView(true);
    }
    if (isAffiliatesView) {
      setIsAffiliatesInView(true);
    }
    if (isAcheivementsView) {
      setIsAchivementsInView(true);
    }
    if (isHowItWorksView) {
      setIsHowItWorksInView(true);
    }
  }, [isHeaderView, isAffiliatesView, isAcheivementsView, isHowItWorksView]);

  return (
    <>
      <Head>
        <title>Overboard Media</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/company_logo.png" />
      </Head>
      <LayoutGroup>
        <Navbar />
        <motion.div
          ref={headerRef}
          initial={{ y: -1000 }}
          animate={{ y: isHeaderInView ? 0 : 1000 }}
          transition={{ duration: 1 }}
        >
          <Header />
        </motion.div>
        <motion.div
          ref={affiliatesRef}
          initial={{ x: isAffiliatesInView ? 1000 : 0 }}
          animate={{ x: isAffiliatesInView ? 0 : 900 }}
          transition={{ duration: 1 }}
        >
          <Affiliates />
        </motion.div>
        <motion.div
          ref={achievementsRef}
          initial={{ x: isAcheivementsInView ? 1000 : 0 }}
          animate={{ x: isAcheivementsInView ? 0 : 1000 }}
          transition={{ duration: 1 }}
        >
          <Achievements />
        </motion.div>
        <motion.div
          ref={howItWorksRef}
          initial={{ y: 500 }}
          animate={{ y: isHowItWorksInView ? 0 : 200 }}
          transition={{ duration: 1 }}
        >
          <HowItWorks />
        </motion.div>
      </LayoutGroup>
    </>
  );
}
